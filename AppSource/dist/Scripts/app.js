minispade.register('pages/applicationcontroller',"(function(){sl.require('pages/applicationview');\r\nApp.ApplicationController = Em.Controller.extend({\r\n       \r\n}); \r\n})();\n//@ sourceURL=pages/applicationcontroller");
minispade.register('pages/applicationroute',"(function(){sl.require('pages/index/indexroute');\r\n\r\nApp.ApplicationRoute = Em.Route.extend({\r\n    \r\n});\r\n})();\n//@ sourceURL=pages/applicationroute");
minispade.register('pages/applicationview',"(function(){App.ApplicationView = Em.View.extend({\r\n    layoutName: 'application/layout'\r\n});})();\n//@ sourceURL=pages/applicationview");
minispade.register('plugins/ic-ajax',"(function(){﻿!function (e) { if (\"object\" == typeof exports) module.exports = e(); else if (\"function\" == typeof define && define.amd) define(e); else { var f; \"undefined\" != typeof window ? f = window : \"undefined\" != typeof global ? f = global : \"undefined\" != typeof self && (f = self), (f.ic || (f.ic = {})).ajax = e() } }(function () {\r\n    var define, module, exports; return (function e(t, n, r) { function s(o, u) { if (!n[o]) { if (!t[o]) { var a = typeof require == \"function\" && require; if (!u && a) return a(o, !0); if (i) return i(o, !0); throw new Error(\"Cannot find module '\" + o + \"'\") } var f = n[o] = { exports: {} }; t[o][0].call(f.exports, function (e) { var n = t[o][1][e]; return s(n ? n : e) }, f, f.exports, e, t, n, r) } return n[o].exports } var i = typeof require == \"function\" && require; for (var o = 0; o < r.length; o++) s(r[o]); return s })({\r\n        1: [function (_dereq_, module, exports) {\r\n            \"use strict\";\r\n            /*!\r\n             * ic-ajax\r\n             *\r\n             * - (c) 2013 Instructure, Inc\r\n             * - please see license at https://github.com/instructure/ic-ajax/blob/master/LICENSE\r\n             * - inspired by discourse ajax: https://github.com/discourse/discourse/blob/master/app/assets/javascripts/discourse/mixins/ajax.js#L19\r\n             */\r\n\r\n            var Ember = window.Ember[\"default\"] || window.Ember;\r\n\r\n            /*\r\n             * jQuery.ajax wrapper, supports the same signature except providing\r\n             * `success` and `error` handlers will throw an error (use promises instead)\r\n             * and it resolves only the response (no access to jqXHR or textStatus).\r\n             */\r\n\r\n            function request() {\r\n                return raw.apply(null, arguments).then(function (result) {\r\n                    return result.response;\r\n                }, null, 'ic-ajax: unwrap raw ajax response');\r\n            }\r\n\r\n            exports.request = request; exports[\"default\"] = request;\r\n\r\n            /*\r\n             * Same as `ajax` except it resolves an object with `{response, textStatus,\r\n             * jqXHR}`, useful if you need access to the jqXHR object for headers, etc.\r\n             */\r\n\r\n            function raw() {\r\n                return makePromise(parseArgs.apply(null, arguments));\r\n            }\r\n\r\n            exports.raw = raw; var __fixtures__ = {};\r\n            exports.__fixtures__ = __fixtures__;\r\n            /*\r\n             * Defines a fixture that will be used instead of an actual ajax\r\n             * request to a given url. This is useful for testing, allowing you to\r\n             * stub out responses your application will send without requiring\r\n             * libraries like sinon or mockjax, etc.\r\n             *\r\n             * For example:\r\n             *\r\n             *    defineFixture('/self', {\r\n             *      response: { firstName: 'Ryan', lastName: 'Florence' },\r\n             *      textStatus: 'success'\r\n             *      jqXHR: {}\r\n             *    });\r\n             *\r\n             * @param {String} url\r\n             * @param {Object} fixture\r\n             */\r\n\r\n            function defineFixture(url, fixture) {\r\n                __fixtures__[url] = fixture;\r\n            }\r\n\r\n            exports.defineFixture = defineFixture;/*\r\n * Looks up a fixture by url.\r\n *\r\n * @param {String} url\r\n */\r\n\r\n            function lookupFixture(url) {\r\n                return __fixtures__ && __fixtures__[url];\r\n            }\r\n\r\n            exports.lookupFixture = lookupFixture; function makePromise(settings) {\r\n                return new Ember.RSVP.Promise(function (resolve, reject) {\r\n                    var fixture = lookupFixture(settings.url);\r\n                    if (fixture) {\r\n                        if (fixture.textStatus === 'success') {\r\n                            return Ember.run(null, resolve, fixture);\r\n                        } else {\r\n                            return Ember.run(null, reject, fixture);\r\n                        }\r\n                    }\r\n                    settings.success = makeSuccess(resolve);\r\n                    settings.error = makeError(reject);\r\n                    Ember.$.ajax(settings);\r\n                }, 'ic-ajax: ' + (settings.type || 'GET') + ' to ' + settings.url);\r\n            };\r\n\r\n            function parseArgs() {\r\n                var settings = {};\r\n                if (arguments.length === 1) {\r\n                    if (typeof arguments[0] === \"string\") {\r\n                        settings.url = arguments[0];\r\n                    } else {\r\n                        settings = arguments[0];\r\n                    }\r\n                } else if (arguments.length === 2) {\r\n                    settings = arguments[1];\r\n                    settings.url = arguments[0];\r\n                }\r\n                if (settings.success || settings.error) {\r\n                    throw new Ember.Error(\"ajax should use promises, received 'success' or 'error' callback\");\r\n                }\r\n                return settings;\r\n            }\r\n\r\n            function makeSuccess(resolve) {\r\n                return function (response, textStatus, jqXHR) {\r\n                    Ember.run(null, resolve, {\r\n                        response: response,\r\n                        textStatus: textStatus,\r\n                        jqXHR: jqXHR\r\n                    });\r\n                }\r\n            }\r\n\r\n            function makeError(reject) {\r\n                return function (jqXHR, textStatus, errorThrown) {\r\n                    Ember.run(null, reject, {\r\n                        jqXHR: jqXHR,\r\n                        textStatus: textStatus,\r\n                        errorThrown: errorThrown\r\n                    });\r\n                };\r\n            }\r\n        }, {}]\r\n    }, {}, [1])\r\n    (1)\r\n});})();\n//@ sourceURL=plugins/ic-ajax");
minispade.register('setup/applicationsetup',"(function(){sl.require(/setup\\/shims/);\r\nsl.require('plugins/ic-ajax');\r\n\r\njQuery.support.cors = true;\r\n$.support.cors = true;\r\n  \r\n$.ajaxSetup({\r\n    xhrFields: {\r\n        withCredentials: true\r\n    }, \r\n    crossDomain: true\r\n});  \r\n  \r\nwindow.App = Ember.Application.create({\r\n    rootElement: '#ember-app',\r\n    LOG_TRANSITIONS: false\r\n});\r\nif (window.location.search.indexOf(\"?test\") !== -1) {\r\n    App.setupForTesting();\r\n    App.injectTestHelpers();\r\n}\r\n\r\nsl.require(/setup\\/initializers/);\r\n\r\nsl.require(/components/);\r\n\r\nsl.require('store/store');\r\n\r\nsl.require(/helpers/);\r\n\r\nsl.require('plugins/embermixins/serializable');\r\nsl.require('plugins/handlebarhelpers/helpers');\r\nsl.require('setup/routersetup');\r\n})();\n//@ sourceURL=setup/applicationsetup");
minispade.register('setup/routersetup',"(function(){sl.require('pages/applicationroute');\r\nsl.require('pages/loading/loadingroute'); //Is not currently working as expected\r\n\r\nApp.Router.reopen({\r\n    location: 'hash'\r\n});\r\n\r\nApp.Router.map(function () {\r\n    this.route('index', { path: '/' });\r\n});\r\n\r\n\r\n})();\n//@ sourceURL=setup/routersetup");
minispade.register('store/store',"(function(){sl.require('store/transforms');\r\nApp.Model = DS.Model;\r\nsl.require(/models\\/base/);\r\nsl.require(/models\\/extensions/);\r\n\r\nvar get = Ember.get;\r\n\r\nApp.ApplicationAdapter = DS.RESTAdapter.extend({\r\n    host: \"http://localhost:59793/api/\",\r\n    antiForgeryTokenSelector: \"#antiForgeryToken\",\r\n    updateRecord: function (store, type, record) {\r\n        var data = this.superSimpleSerialier(store, type, record);\r\n        data.id = get(record, 'id');\r\n        return this.ajax(this.buildURL(type.typeKey, data.id), \"PUT\", { data: data });\r\n    },\r\n    createRecord: function (store, type, record) {\r\n        var data = this.superSimpleSerialier(store, type, record);\r\n        return this.ajax(this.buildURL(type.typeKey), \"POST\", { data: data });\r\n    },\r\n    superSimpleSerialier: function(store, type, record) {\r\n        var data = {};\r\n        record.eachAttribute(function (name) {\r\n            data[name] = record.get(name);\r\n        });\r\n        record.eachRelationship(function (name, relationship) {\r\n            if (relationship.kind == 'belongsTo') data[name] = record.get(name + '.id');\r\n        }, this);\r\n        return data;\r\n    }\r\n});\r\n\r\n})();\n//@ sourceURL=store/store");
minispade.register('store/tempstore',"(function(){﻿App.TempStore = DS.Store.extend({\r\n    adapter: DS.FixtureAdapter\r\n});})();\n//@ sourceURL=store/tempstore");
minispade.register('store/transforms',"(function(){minispade.require('plugins/embermixins/serializable');\r\nApp.ArrayTransform = DS.Transform.extend({\r\n    deserialize: function (value) {\r\n        //_.each(value, function (item) {\r\n        //    value[item] = typeof item === \"object\" ? Ember.Object.createWithMixins(Ember.serializable, item) : item;\r\n        //});\r\n        return value;\r\n    },\r\n\r\n    serialize: function (value) {\r\n        return value;\r\n    }\r\n});\r\nApp.NicedateTransform = DS.Transform.extend({\r\n    deserialize: function (i) {\r\n        if (typeof (i) !== \"undefined\" && i !== null) {\r\n            var d = App.hlp.prepareDate(i);\r\n            return d;\r\n        } else {\r\n            return '';\r\n        }\r\n    }, \r\n    serialize: function (i, a, c) {\r\n        if (typeof (i) !== \"undefined\" && i !== null) {\r\n            return i.toString();\r\n        }\r\n        return i;\r\n    }\r\n});\r\nApp.ShortdateTransform = DS.Transform.extend({\r\n    deserialize: function (i) {\r\n        if (typeof (i) !== \"undefined\" && i !== null) {\r\n            var d = App.hlp.prepareDate(i, true);\r\n            return d;\r\n        } else {\r\n            return '';\r\n        }\r\n    },\r\n    serialize: function (i) {\r\n        if (typeof (i) !== \"undefined\" && i !== null) {\r\n            return i.toString();\r\n        }\r\n        return i;\r\n    }\r\n});\r\n\r\nApp.ObjectTransform = DS.Transform.extend({\r\n    deserialize: function (serialized) {\r\n        return Em.isNone(serialized) ? {} : Ember.Object.create(Ember.serializable, serialized);\r\n    },\r\n    serialize: function (deserialized) {\r\n        return Em.isNone(deserialized) ? {} : deserialized;\r\n    }\r\n});\r\n\r\n})();\n//@ sourceURL=store/transforms");
minispade.register('pages/index/indexcontroller',"(function(){App.IndexController = Em.Controller.extend({\r\n    \r\n});})();\n//@ sourceURL=pages/index/indexcontroller");
minispade.register('pages/index/indexroute',"(function(){sl.require('pages/index/indexcontroller');\r\nsl.require('pages/index/indexview');\r\nApp.IndexRoute = Em.Route.extend({\r\n   \r\n});\r\n\r\n\r\n\r\n})();\n//@ sourceURL=pages/index/indexroute");
minispade.register('pages/index/indexview',"(function(){App.IndexView = Em.View.extend({\r\n    \r\n});})();\n//@ sourceURL=pages/index/indexview");
minispade.register('pages/loading/loadingcontroller',"(function(){App.LoadingController = Ember.Controller.extend({\r\n    init: function () {\r\n        this._super();\r\n    } \r\n});})();\n//@ sourceURL=pages/loading/loadingcontroller");
minispade.register('pages/loading/loadingroute',"(function(){\r\nsl.require('pages/loading/loadingview');\r\nsl.require('pages/loading/loadingcontroller');\r\n\r\nApp.LoadingRoute = Ember.Route.extend({\r\n \r\n});})();\n//@ sourceURL=pages/loading/loadingroute");
minispade.register('pages/loading/loadingview',"(function(){App.LoadingView = Ember.View.extend({\r\n    templateName: 'loading',\r\n    init: function () {\r\n        this._super();\r\n    },\r\n    didInsertElement: function() {\r\n        this._super();\r\n    }\r\n});})();\n//@ sourceURL=pages/loading/loadingview");
minispade.register('plugins/handlebarhelpers/helpers',"(function(){Ember.Handlebars.registerBoundHelper('cut10', function (text, v) {\r\n    text = Handlebars.Utils.escapeExpression(text);\r\n    var result = text;\r\n    if (text.length > 10) {\r\n        result = text.slice(0, 10) + '...';\r\n    }\r\n\r\n    return new Handlebars.SafeString(result);\r\n});\r\n\r\nEmber.Handlebars.registerBoundHelper('cut15', function (text, v) {\r\n    text = Handlebars.Utils.escapeExpression(text);\r\n    var result = text;\r\n    if (text.length > 10) {\r\n        result = text.slice(0, 15) + '...';\r\n    }\r\n\r\n    return new Handlebars.SafeString(result);\r\n});\r\n\r\nEmber.Handlebars.registerBoundHelper('cut20', function (text, v) {\r\n    text = Handlebars.Utils.escapeExpression(text);\r\n    var result = text;\r\n    if (text.length > 10) {\r\n        result = text.slice(0, 15) + '...';\r\n    }\r\n\r\n    return new Handlebars.SafeString(result);\r\n});\r\n\r\n\r\n\r\nEmber.Handlebars.registerBoundHelper('nicedate', function (text, context) {\r\n    var d = text;\r\n    var result = App.hlp.prepareDate(new Date(d), true);\r\n    return new Handlebars.SafeString(result);\r\n});\r\n\r\nApp.hlp = Ember.Object.create();\r\n\r\nApp.hlp.reopen({\r\n    prepareDate: function (date, hideTime) {\r\n        var newDate = new Date(date),\r\n            ret = this.padStr(newDate.getDate()) + \".\" + this.padStr((newDate.getMonth() + 1)) + \".\" + newDate.getFullYear();\r\n        if (!Ember.isNone(hideTime) && hideTime === true)\r\n            return ret;\r\n        return ret + \" kl. \" + this.padStr(newDate.getHours()) + \":\" + this.padStr(newDate.getMinutes());\r\n    },\r\n    padStr: function (i) {\r\n        return (i < 10) ? \"0\" + i : \"\" + i;\r\n    }\r\n});})();\n//@ sourceURL=plugins/handlebarhelpers/helpers");
minispade.register('plugins/embermixins/groupablemixin',"(function(){/**\r\n@module ember\r\n@submodule ember-runtime\r\n*/\r\nvar get = Ember.get, set = Ember.set;\r\n\r\nEmber.GroupableMixin = Ember.Mixin.create({\r\n    contentArrayDidChange: function (array, idx, removedCount, addedCount) {\r\n        var addedObjects = array.slice(idx, idx + addedCount);\r\n\r\n        addedObjects.forEach(function (object) {\r\n            Ember.addBeforeObserver(object, get(this, 'groupBy'), this, 'removeItemGrouped');\r\n            Ember.addObserver(object, get(this, 'groupBy'), this, 'insertItemGrouped');\r\n\r\n            this.insertItemGrouped(object);\r\n        }, this);\r\n\r\n        this._super.apply(this, array, idx, removedCount, addedCount);\r\n    },\r\n\r\n    contentArrayWillChange: function (array, idx, removedCount, addedCount) {\r\n        var removedObjects = array.slice(idx, idx + removedCount);\r\n\r\n        removedObjects.forEach(function (object) {\r\n            Ember.removeBeforeObserver(object, get(this, 'groupBy'), this, 'removeItemGrouped');\r\n            Ember.removeObserver(object, get(this, 'groupBy'), this, 'insertItemGrouped');\r\n\r\n            this.removeItemGrouped(object);\r\n        }, this);\r\n\r\n        this._super.apply(this, array, idx, removedCount, addedCount);\r\n    },\r\n\r\n    insertItemGrouped: function (object) {\r\n        var group = this.groupFor(object);\r\n        group.pushObject(object);\r\n\r\n        var groups = this.get('groups');\r\n        if (!groups.contains(group)) groups.pushObject(group);\r\n    },\r\n\r\n    removeItemGrouped: function (object) {\r\n        var group = this.groupFor(object);\r\n        group.removeObject(object);\r\n\r\n        if (get(group, 'length') === 0) {\r\n            get(this, 'groups').removeObject(group);\r\n        }\r\n    },\r\n\r\n    groupedContent: Ember.computed('arrangedContent', 'groupBy', function () {\r\n        var content = get(this, 'arrangedContent');\r\n        if (!content) return;\r\n\r\n        return this.group(content);\r\n    }),\r\n\r\n    group: function (collection) {\r\n        var groupsMap = {};\r\n        var groups = Ember.A([]);\r\n\r\n        set(this, 'groupsMap', groupsMap);\r\n        set(this, 'groups', groups);\r\n\r\n        collection.forEach((function (object) {\r\n            Ember.addBeforeObserver(object, get(this, 'groupBy'), this, 'removeItemGrouped');\r\n            Ember.addObserver(object, get(this, 'groupBy'), this, 'insertItemGrouped');\r\n\r\n            var group = this.groupFor(object);\r\n\r\n            if (!group) return;\r\n\r\n            group.get(\"content\").pushObject(object);\r\n        }), this);\r\n\r\n        return groups;\r\n    },\r\n\r\n    groupFor: function (object) {\r\n        var group, groupName, groupType, groups, groupsMap;\r\n\r\n        groupsMap = this.get('groupsMap');\r\n        groups = this.get('groups');\r\n        groupName = this.extractGroup(object);\r\n\r\n        if (!groupName) return;\r\n\r\n        group = groupsMap[groupName];\r\n\r\n        if (!group) {\r\n            groupType = this.get('groupType');\r\n\r\n            group = Ember.ArrayProxy.create({\r\n                content: Ember.A([]),\r\n                name: groupName\r\n            });\r\n\r\n            groupsMap[groupName] = group;\r\n            groups.pushObject(group);\r\n        }\r\n\r\n        return group;\r\n    },\r\n\r\n    extractGroup: function (object) {\r\n        var propertyName = get(this, 'groupBy');\r\n\r\n        if (!propertyName) return;\r\n\r\n        return get(object, propertyName);\r\n    }\r\n});})();\n//@ sourceURL=plugins/embermixins/groupablemixin");
minispade.register('plugins/embermixins/serializable',"(function(){/**\r\nMixin to serialize ember object to json.\r\nIs mostly used in combination with ember-data models.\r\nWorks by filtering out all the functions, prototype methods and all\r\nattributes that does not include an toString method.\r\n\r\n@class serializable \r\n@namespace Ember\r\n@module App\r\n@extends Ember.Mixin\r\n*/\r\nEmber.serializable = Ember.Mixin.create({\r\n\r\n    serialize: function (options) {\r\n        var v, ret = [], r = [];\r\n\r\n        //return this.toDataHelper(this, options);\r\n\r\n        for (var key in this) {\r\n            if (this.hasOwnProperty(key)) {\r\n                v = this[key];\r\n                if (v === 'toString') {\r\n                    continue;\r\n                } // ignore useless items\r\n                if (Ember.typeOf(v) === 'function') {\r\n                    continue;\r\n                }\r\n                /*if (typeof(options) !== \"undefined\" && typeof (options.lowercase !== \"undefined\") && options.lowercase)\r\n                    ret.push(key.toLowerCase());\r\n                else if (typeof(options) !== \"undefined\" && typeof options.uppercase !== \"undefined\" && options.uppercase)\r\n                    ret.push(key.toUpperCase());\r\n                else*/\r\n                ret.push(key);\r\n            }\r\n        }\r\n\r\n        r = this.getProperties(ret);\r\n\r\n        if (Ember.isNone(options))\r\n            return r;\r\n\r\n        _.each(r, function (property, key) {\r\n            if (Ember.typeOf(r[key]) == 'string') {\r\n                if (!Ember.isNone(options.lowercase))\r\n                    r[key] = property.toLowerCase();\r\n                else if (!Ember.isNone(options.uppercase))\r\n                    r[key] = property.toUpperCase();\r\n                return;\r\n            }\r\n            else\r\n                r[key] = property;\r\n        });\r\n        return r;\r\n    }\r\n});\r\n//This adds the serialize to all ember objects.\r\nEmber.Object.reopen({\r\n    serialize: function (options) {\r\n        var v, ret = [], r = [];\r\n\r\n        //return this.toDataHelper(this, options);\r\n\r\n        for (var key in this) {\r\n            if (this.hasOwnProperty(key)) {\r\n                v = this[key];\r\n                if (v === 'toString') {\r\n                    continue;\r\n                } // ignore useless items\r\n                if (Ember.typeOf(v) === 'function') {\r\n                    continue;\r\n                }\r\n                /*if (typeof(options) !== \"undefined\" && typeof (options.lowercase !== \"undefined\") && options.lowercase)\r\n                    ret.push(key.toLowerCase());\r\n                else if (typeof(options) !== \"undefined\" && typeof options.uppercase !== \"undefined\" && options.uppercase)\r\n                    ret.push(key.toUpperCase());\r\n                else*/\r\n                ret.push(key);\r\n            }\r\n        }\r\n\r\n        r = this.getProperties(ret);\r\n\r\n        if (Ember.isNone(options))\r\n            return r;\r\n\r\n        _.each(r, function (property, key) {\r\n            if (Ember.typeOf(r[key]) == 'string') {\r\n                if (!Ember.isNone(options.lowercase))\r\n                    r[key] = property.toLowerCase();\r\n                else if (!Ember.isNone(options.uppercase))\r\n                    r[key] = property.toUpperCase();\r\n                return;\r\n            }\r\n            else\r\n                r[key] = property;\r\n        });\r\n        return r;\r\n    }\r\n});})();\n//@ sourceURL=plugins/embermixins/serializable");
minispade.register('setup/initializers/tempstore',"(function(){﻿Ember.Application.initializer({\r\n    name: \"tempStore\",\r\n    initialize: function (container, application) {\r\n        sl.require('store/tempstore');\r\n        container.register('store:temp', App.TempStore, { instantiate: true, singleton: true });\r\n    }\r\n});\r\n\r\nEmber.Application.initializer({\r\n    name: \"injecttempStore\",\r\n    after: 'tempStore',\r\n\r\n    initialize: function (container) {\r\n        container.injection('controller', 'tempstore', 'store:temp');\r\n        container.typeInjection('route', 'tempstore', 'store:temp');\r\n    }\r\n});})();\n//@ sourceURL=setup/initializers/tempstore");
minispade.register('setup/shims/es5-shim',"(function(){﻿/*!\r\n * https://github.com/es-shims/es5-shim\r\n * @license es5-shim Copyright 2009-2014 by contributors, MIT License\r\n * see https://github.com/es-shims/es5-shim/blob/master/LICENSE\r\n */\r\n\r\n// vim: ts=4 sts=4 sw=4 expandtab\r\n\r\n//Add semicolon to prevent IIFE from being passed as argument to concated code.\r\n;\r\n\r\n// UMD (Universal Module Definition)\r\n// see https://github.com/umdjs/umd/blob/master/returnExports.js\r\n(function (root, factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        // AMD. Register as an anonymous module.\r\n        define(factory);\r\n    } else if (typeof exports === 'object') {\r\n        // Node. Does not work with strict CommonJS, but\r\n        // only CommonJS-like enviroments that support module.exports,\r\n        // like Node.\r\n        module.exports = factory();\r\n    } else {\r\n        // Browser globals (root is window)\r\n        root.returnExports = factory();\r\n    }\r\n}(this, function () {\r\n\r\n    /**\r\n     * Brings an environment as close to ECMAScript 5 compliance\r\n     * as is possible with the facilities of erstwhile engines.\r\n     *\r\n     * Annotated ES5: http://es5.github.com/ (specific links below)\r\n     * ES5 Spec: http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\r\n     * Required reading: http://javascriptweblog.wordpress.com/2011/12/05/extending-javascript-natives/\r\n     */\r\n\r\n    //\r\n    // Function\r\n    // ========\r\n    //\r\n\r\n    // ES-5 15.3.4.5\r\n    // http://es5.github.com/#x15.3.4.5\r\n\r\n    function Empty() { }\r\n\r\n    if (!Function.prototype.bind) {\r\n        Function.prototype.bind = function bind(that) { // .length is 1\r\n            // 1. Let Target be the this value.\r\n            var target = this;\r\n            // 2. If IsCallable(Target) is false, throw a TypeError exception.\r\n            if (typeof target != \"function\") {\r\n                throw new TypeError(\"Function.prototype.bind called on incompatible \" + target);\r\n            }\r\n            // 3. Let A be a new (possibly empty) internal list of all of the\r\n            //   argument values provided after thisArg (arg1, arg2 etc), in order.\r\n            // XXX slicedArgs will stand in for \"A\" if used\r\n            var args = _Array_slice_.call(arguments, 1); // for normal call\r\n            // 4. Let F be a new native ECMAScript object.\r\n            // 11. Set the [[Prototype]] internal property of F to the standard\r\n            //   built-in Function prototype object as specified in 15.3.3.1.\r\n            // 12. Set the [[Call]] internal property of F as described in\r\n            //   15.3.4.5.1.\r\n            // 13. Set the [[Construct]] internal property of F as described in\r\n            //   15.3.4.5.2.\r\n            // 14. Set the [[HasInstance]] internal property of F as described in\r\n            //   15.3.4.5.3.\r\n            var binder = function () {\r\n\r\n                if (this instanceof bound) {\r\n                    // 15.3.4.5.2 [[Construct]]\r\n                    // When the [[Construct]] internal method of a function object,\r\n                    // F that was created using the bind function is called with a\r\n                    // list of arguments ExtraArgs, the following steps are taken:\r\n                    // 1. Let target be the value of F's [[TargetFunction]]\r\n                    //   internal property.\r\n                    // 2. If target has no [[Construct]] internal method, a\r\n                    //   TypeError exception is thrown.\r\n                    // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\r\n                    //   property.\r\n                    // 4. Let args be a new list containing the same values as the\r\n                    //   list boundArgs in the same order followed by the same\r\n                    //   values as the list ExtraArgs in the same order.\r\n                    // 5. Return the result of calling the [[Construct]] internal\r\n                    //   method of target providing args as the arguments.\r\n\r\n                    var result = target.apply(\r\n                        this,\r\n                        args.concat(_Array_slice_.call(arguments))\r\n                    );\r\n                    if (Object(result) === result) {\r\n                        return result;\r\n                    }\r\n                    return this;\r\n\r\n                } else {\r\n                    // 15.3.4.5.1 [[Call]]\r\n                    // When the [[Call]] internal method of a function object, F,\r\n                    // which was created using the bind function is called with a\r\n                    // this value and a list of arguments ExtraArgs, the following\r\n                    // steps are taken:\r\n                    // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\r\n                    //   property.\r\n                    // 2. Let boundThis be the value of F's [[BoundThis]] internal\r\n                    //   property.\r\n                    // 3. Let target be the value of F's [[TargetFunction]] internal\r\n                    //   property.\r\n                    // 4. Let args be a new list containing the same values as the\r\n                    //   list boundArgs in the same order followed by the same\r\n                    //   values as the list ExtraArgs in the same order.\r\n                    // 5. Return the result of calling the [[Call]] internal method\r\n                    //   of target providing boundThis as the this value and\r\n                    //   providing args as the arguments.\r\n\r\n                    // equiv: target.call(this, ...boundArgs, ...args)\r\n                    return target.apply(\r\n                        that,\r\n                        args.concat(_Array_slice_.call(arguments))\r\n                    );\r\n\r\n                }\r\n\r\n            };\r\n\r\n            // 15. If the [[Class]] internal property of Target is \"Function\", then\r\n            //     a. Let L be the length property of Target minus the length of A.\r\n            //     b. Set the length own property of F to either 0 or L, whichever is\r\n            //       larger.\r\n            // 16. Else set the length own property of F to 0.\r\n\r\n            var boundLength = Math.max(0, target.length - args.length);\r\n\r\n            // 17. Set the attributes of the length own property of F to the values\r\n            //   specified in 15.3.5.1.\r\n            var boundArgs = [];\r\n            for (var i = 0; i < boundLength; i++) {\r\n                boundArgs.push(\"$\" + i);\r\n            }\r\n\r\n            // XXX Build a dynamic function with desired amount of arguments is the only \r\n            // way to set the length property of a function. \r\n            // In environments where Content Security Policies enabled (Chrome extensions, \r\n            // for ex.) all use of eval or Function costructor throws an exception. \r\n            // However in all of these environments Function.prototype.bind exists \r\n            // and so this code will never be executed.\r\n            var bound = Function(\"binder\", \"return function(\" + boundArgs.join(\",\") + \"){return binder.apply(this,arguments)}\")(binder);\r\n\r\n            if (target.prototype) {\r\n                Empty.prototype = target.prototype;\r\n                bound.prototype = new Empty();\r\n                // Clean up dangling references.\r\n                Empty.prototype = null;\r\n            }\r\n\r\n            // TODO\r\n            // 18. Set the [[Extensible]] internal property of F to true.\r\n\r\n            // TODO\r\n            // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\r\n            // 20. Call the [[DefineOwnProperty]] internal method of F with\r\n            //   arguments \"caller\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\r\n            //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\r\n            //   false.\r\n            // 21. Call the [[DefineOwnProperty]] internal method of F with\r\n            //   arguments \"arguments\", PropertyDescriptor {[[Get]]: thrower,\r\n            //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\r\n            //   and false.\r\n\r\n            // TODO\r\n            // NOTE Function objects created using Function.prototype.bind do not\r\n            // have a prototype property or the [[Code]], [[FormalParameters]], and\r\n            // [[Scope]] internal properties.\r\n            // XXX can't delete prototype in pure-js.\r\n\r\n            // 22. Return F.\r\n            return bound;\r\n        };\r\n    }\r\n\r\n    // Shortcut to an often accessed properties, in order to avoid multiple\r\n    // dereference that costs universally.\r\n    // _Please note: Shortcuts are defined after `Function.prototype.bind` as we\r\n    // us it in defining shortcuts.\r\n    var call = Function.prototype.call;\r\n    var prototypeOfArray = Array.prototype;\r\n    var prototypeOfObject = Object.prototype;\r\n    var _Array_slice_ = prototypeOfArray.slice;\r\n    // Having a toString local variable name breaks in Opera so use _toString.\r\n    var _toString = call.bind(prototypeOfObject.toString);\r\n    var owns = call.bind(prototypeOfObject.hasOwnProperty);\r\n\r\n    // If JS engine supports accessors creating shortcuts.\r\n    var defineGetter;\r\n    var defineSetter;\r\n    var lookupGetter;\r\n    var lookupSetter;\r\n    var supportsAccessors;\r\n    if ((supportsAccessors = owns(prototypeOfObject, \"__defineGetter__\"))) {\r\n        defineGetter = call.bind(prototypeOfObject.__defineGetter__);\r\n        defineSetter = call.bind(prototypeOfObject.__defineSetter__);\r\n        lookupGetter = call.bind(prototypeOfObject.__lookupGetter__);\r\n        lookupSetter = call.bind(prototypeOfObject.__lookupSetter__);\r\n    }\r\n\r\n    //\r\n    // Array\r\n    // =====\r\n    //\r\n\r\n    // ES5 15.4.4.12\r\n    // http://es5.github.com/#x15.4.4.12\r\n    // Default value for second param\r\n    // [bugfix, ielt9, old browsers]\r\n    // IE < 9 bug: [1,2].splice(0).join(\"\") == \"\" but should be \"12\"\r\n    if ([1, 2].splice(0).length != 2) {\r\n        var array_splice = Array.prototype.splice;\r\n        var array_push = Array.prototype.push;\r\n        var array_unshift = Array.prototype.unshift;\r\n\r\n        if (function () { // test IE < 9 to splice bug - see issue #138\r\n            function makeArray(l) {\r\n                var a = [];\r\n                while (l--) {\r\n                    a.unshift(l)\r\n        }\r\n                return a\r\n        }\r\n\r\n            var array = []\r\n                , lengthBefore\r\n            ;\r\n\r\n            array.splice.bind(array, 0, 0).apply(null, makeArray(20));\r\n            array.splice.bind(array, 0, 0).apply(null, makeArray(26));\r\n\r\n            lengthBefore = array.length; //20\r\n            array.splice(5, 0, \"XXX\"); // add one element\r\n\r\n            if (lengthBefore + 1 == array.length) {\r\n                return true;// has right splice implementation without bugs\r\n        }\r\n            // else {\r\n            //    IE8 bug\r\n            // }\r\n        }()) {//IE 6/7\r\n            Array.prototype.splice = function (start, deleteCount) {\r\n                if (!arguments.length) {\r\n                    return [];\r\n                } else {\r\n                    return array_splice.apply(this, [\r\n                        start === void 0 ? 0 : start,\r\n                        deleteCount === void 0 ? (this.length - start) : deleteCount\r\n                    ].concat(_Array_slice_.call(arguments, 2)))\r\n                }\r\n            };\r\n        }\r\n        else {//IE8\r\n            Array.prototype.splice = function (start, deleteCount) {\r\n                var result\r\n                    , args = _Array_slice_.call(arguments, 2)\r\n                    , addElementsCount = args.length\r\n                ;\r\n\r\n                if (!arguments.length) {\r\n                    return [];\r\n                }\r\n\r\n                if (start === void 0) { // default\r\n                    start = 0;\r\n                }\r\n                if (deleteCount === void 0) { // default\r\n                    deleteCount = this.length - start;\r\n                }\r\n\r\n                if (addElementsCount > 0) {\r\n                    if (deleteCount <= 0) {\r\n                        if (start == this.length) { // tiny optimisation #1\r\n                            array_push.apply(this, args);\r\n                            return [];\r\n                        }\r\n\r\n                        if (start == 0) { // tiny optimisation #2\r\n                            array_unshift.apply(this, args);\r\n                            return [];\r\n                        }\r\n                    }\r\n\r\n                    // Array.prototype.splice implementation\r\n                    result = _Array_slice_.call(this, start, start + deleteCount);// delete part\r\n                    args.push.apply(args, _Array_slice_.call(this, start + deleteCount, this.length));// right part\r\n                    args.unshift.apply(args, _Array_slice_.call(this, 0, start));// left part\r\n\r\n                    // delete all items from this array and replace it to 'left part' + _Array_slice_.call(arguments, 2) + 'right part'\r\n                    args.unshift(0, this.length);\r\n\r\n                    array_splice.apply(this, args);\r\n\r\n                    return result;\r\n                }\r\n\r\n                return array_splice.call(this, start, deleteCount);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // ES5 15.4.4.12\r\n    // http://es5.github.com/#x15.4.4.13\r\n    // Return len+argCount.\r\n    // [bugfix, ielt8]\r\n    // IE < 8 bug: [].unshift(0) == undefined but should be \"1\"\r\n    if ([].unshift(0) != 1) {\r\n        var array_unshift = Array.prototype.unshift;\r\n        Array.prototype.unshift = function () {\r\n            array_unshift.apply(this, arguments);\r\n            return this.length;\r\n        };\r\n    }\r\n\r\n    // ES5 15.4.3.2\r\n    // http://es5.github.com/#x15.4.3.2\r\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray\r\n    if (!Array.isArray) {\r\n        Array.isArray = function isArray(obj) {\r\n            return _toString(obj) == \"[object Array]\";\r\n        };\r\n    }\r\n\r\n    // The IsCallable() check in the Array functions\r\n    // has been replaced with a strict check on the\r\n    // internal class of the object to trap cases where\r\n    // the provided function was actually a regular\r\n    // expression literal, which in V8 and\r\n    // JavaScriptCore is a typeof \"function\".  Only in\r\n    // V8 are regular expression literals permitted as\r\n    // reduce parameters, so it is desirable in the\r\n    // general case for the shim to match the more\r\n    // strict and common behavior of rejecting regular\r\n    // expressions.\r\n\r\n    // ES5 15.4.4.18\r\n    // http://es5.github.com/#x15.4.4.18\r\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/array/forEach\r\n\r\n\r\n    // Check failure of by-index access of string characters (IE < 9)\r\n    // and failure of `0 in boxedString` (Rhino)\r\n    var boxedString = Object(\"a\");\r\n    var splitString = boxedString[0] != \"a\" || !(0 in boxedString);\r\n\r\n    var properlyBoxesContext = function properlyBoxed(method) {\r\n        // Check node 0.6.21 bug where third parameter is not boxed\r\n        var properlyBoxes = true;\r\n        if (method) {\r\n            method.call('foo', function (item, index, context) {\r\n                if (typeof context !== 'object') { properlyBoxes = false; }\r\n            });\r\n        }\r\n        return !!method && properlyBoxes;\r\n    };\r\n\r\n    if (!Array.prototype.forEach || !properlyBoxesContext(Array.prototype.forEach)) {\r\n        Array.prototype.forEach = function forEach(fun /*, thisp*/) {\r\n            var object = toObject(this),\r\n                self = splitString && _toString(this) == \"[object String]\" ?\r\n                    this.split(\"\") :\r\n                    object,\r\n                thisp = arguments[1],\r\n                i = -1,\r\n                length = self.length >>> 0;\r\n\r\n            // If no callback function or if callback is not a callable function\r\n            if (_toString(fun) != \"[object Function]\") {\r\n                throw new TypeError(); // TODO message\r\n            }\r\n\r\n            while (++i < length) {\r\n                if (i in self) {\r\n                    // Invoke the callback function with call, passing arguments:\r\n                    // context, property value, property key, thisArg object\r\n                    // context\r\n                    fun.call(thisp, self[i], i, object);\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    // ES5 15.4.4.19\r\n    // http://es5.github.com/#x15.4.4.19\r\n    // https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/map\r\n    if (!Array.prototype.map || !properlyBoxesContext(Array.prototype.map)) {\r\n        Array.prototype.map = function map(fun /*, thisp*/) {\r\n            var object = toObject(this),\r\n                self = splitString && _toString(this) == \"[object String]\" ?\r\n                    this.split(\"\") :\r\n                    object,\r\n                length = self.length >>> 0,\r\n                result = Array(length),\r\n                thisp = arguments[1];\r\n\r\n            // If no callback function or if callback is not a callable function\r\n            if (_toString(fun) != \"[object Function]\") {\r\n                throw new TypeError(fun + \" is not a function\");\r\n            }\r\n\r\n            for (var i = 0; i < length; i++) {\r\n                if (i in self)\r\n                    result[i] = fun.call(thisp, self[i], i, object);\r\n            }\r\n            return result;\r\n        };\r\n    }\r\n\r\n    // ES5 15.4.4.20\r\n    // http://es5.github.com/#x15.4.4.20\r\n    // https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n    if (!Array.prototype.filter || !properlyBoxesContext(Array.prototype.filter)) {\r\n        Array.prototype.filter = function filter(fun /*, thisp */) {\r\n            var object = toObject(this),\r\n                self = splitString && _toString(this) == \"[object String]\" ?\r\n                    this.split(\"\") :\r\n                        object,\r\n                length = self.length >>> 0,\r\n                result = [],\r\n                value,\r\n                thisp = arguments[1];\r\n\r\n            // If no callback function or if callback is not a callable function\r\n            if (_toString(fun) != \"[object Function]\") {\r\n                throw new TypeError(fun + \" is not a function\");\r\n            }\r\n\r\n            for (var i = 0; i < length; i++) {\r\n                if (i in self) {\r\n                    value = self[i];\r\n                    if (fun.call(thisp, value, i, object)) {\r\n                        result.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n    }\r\n\r\n    // ES5 15.4.4.16\r\n    // http://es5.github.com/#x15.4.4.16\r\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/every\r\n    if (!Array.prototype.every || !properlyBoxesContext(Array.prototype.every)) {\r\n        Array.prototype.every = function every(fun /*, thisp */) {\r\n            var object = toObject(this),\r\n                self = splitString && _toString(this) == \"[object String]\" ?\r\n                    this.split(\"\") :\r\n                    object,\r\n                length = self.length >>> 0,\r\n                thisp = arguments[1];\r\n\r\n            // If no callback function or if callback is not a callable function\r\n            if (_toString(fun) != \"[object Function]\") {\r\n                throw new TypeError(fun + \" is not a function\");\r\n            }\r\n\r\n            for (var i = 0; i < length; i++) {\r\n                if (i in self && !fun.call(thisp, self[i], i, object)) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n    }\r\n\r\n    // ES5 15.4.4.17\r\n    // http://es5.github.com/#x15.4.4.17\r\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/some\r\n    if (!Array.prototype.some || !properlyBoxesContext(Array.prototype.some)) {\r\n        Array.prototype.some = function some(fun /*, thisp */) {\r\n            var object = toObject(this),\r\n                self = splitString && _toString(this) == \"[object String]\" ?\r\n                    this.split(\"\") :\r\n                    object,\r\n                length = self.length >>> 0,\r\n                thisp = arguments[1];\r\n\r\n            // If no callback function or if callback is not a callable function\r\n            if (_toString(fun) != \"[object Function]\") {\r\n                throw new TypeError(fun + \" is not a function\");\r\n            }\r\n\r\n            for (var i = 0; i < length; i++) {\r\n                if (i in self && fun.call(thisp, self[i], i, object)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n    }\r\n\r\n    // ES5 15.4.4.21\r\n    // http://es5.github.com/#x15.4.4.21\r\n    // https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduce\r\n    if (!Array.prototype.reduce) {\r\n        Array.prototype.reduce = function reduce(fun /*, initial*/) {\r\n            var object = toObject(this),\r\n                self = splitString && _toString(this) == \"[object String]\" ?\r\n                    this.split(\"\") :\r\n                    object,\r\n                length = self.length >>> 0;\r\n\r\n            // If no callback function or if callback is not a callable function\r\n            if (_toString(fun) != \"[object Function]\") {\r\n                throw new TypeError(fun + \" is not a function\");\r\n            }\r\n\r\n            // no value to return if no initial value and an empty array\r\n            if (!length && arguments.length == 1) {\r\n                throw new TypeError(\"reduce of empty array with no initial value\");\r\n            }\r\n\r\n            var i = 0;\r\n            var result;\r\n            if (arguments.length >= 2) {\r\n                result = arguments[1];\r\n            } else {\r\n                do {\r\n                    if (i in self) {\r\n                        result = self[i++];\r\n                        break;\r\n                    }\r\n\r\n                    // if array contains no values, no initial value to return\r\n                    if (++i >= length) {\r\n                        throw new TypeError(\"reduce of empty array with no initial value\");\r\n                    }\r\n                } while (true);\r\n            }\r\n\r\n            for (; i < length; i++) {\r\n                if (i in self) {\r\n                    result = fun.call(void 0, result, self[i], i, object);\r\n                }\r\n            }\r\n\r\n            return result;\r\n        };\r\n    }\r\n\r\n    // ES5 15.4.4.22\r\n    // http://es5.github.com/#x15.4.4.22\r\n    // https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/reduceRight\r\n    if (!Array.prototype.reduceRight) {\r\n        Array.prototype.reduceRight = function reduceRight(fun /*, initial*/) {\r\n            var object = toObject(this),\r\n                self = splitString && _toString(this) == \"[object String]\" ?\r\n                    this.split(\"\") :\r\n                    object,\r\n                length = self.length >>> 0;\r\n\r\n            // If no callback function or if callback is not a callable function\r\n            if (_toString(fun) != \"[object Function]\") {\r\n                throw new TypeError(fun + \" is not a function\");\r\n            }\r\n\r\n            // no value to return if no initial value, empty array\r\n            if (!length && arguments.length == 1) {\r\n                throw new TypeError(\"reduceRight of empty array with no initial value\");\r\n            }\r\n\r\n            var result, i = length - 1;\r\n            if (arguments.length >= 2) {\r\n                result = arguments[1];\r\n            } else {\r\n                do {\r\n                    if (i in self) {\r\n                        result = self[i--];\r\n                        break;\r\n                    }\r\n\r\n                    // if array contains no values, no initial value to return\r\n                    if (--i < 0) {\r\n                        throw new TypeError(\"reduceRight of empty array with no initial value\");\r\n                    }\r\n                } while (true);\r\n            }\r\n\r\n            if (i < 0) {\r\n                return result;\r\n            }\r\n\r\n            do {\r\n                if (i in this) {\r\n                    result = fun.call(void 0, result, self[i], i, object);\r\n                }\r\n            } while (i--);\r\n\r\n            return result;\r\n        };\r\n    }\r\n\r\n    // ES5 15.4.4.14\r\n    // http://es5.github.com/#x15.4.4.14\r\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf\r\n    if (!Array.prototype.indexOf || ([0, 1].indexOf(1, 2) != -1)) {\r\n        Array.prototype.indexOf = function indexOf(sought /*, fromIndex */) {\r\n            var self = splitString && _toString(this) == \"[object String]\" ?\r\n                    this.split(\"\") :\r\n                    toObject(this),\r\n                length = self.length >>> 0;\r\n\r\n            if (!length) {\r\n                return -1;\r\n            }\r\n\r\n            var i = 0;\r\n            if (arguments.length > 1) {\r\n                i = toInteger(arguments[1]);\r\n            }\r\n\r\n            // handle negative indices\r\n            i = i >= 0 ? i : Math.max(0, length + i);\r\n            for (; i < length; i++) {\r\n                if (i in self && self[i] === sought) {\r\n                    return i;\r\n                }\r\n            }\r\n            return -1;\r\n        };\r\n    }\r\n\r\n    // ES5 15.4.4.15\r\n    // http://es5.github.com/#x15.4.4.15\r\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/lastIndexOf\r\n    if (!Array.prototype.lastIndexOf || ([0, 1].lastIndexOf(0, -3) != -1)) {\r\n        Array.prototype.lastIndexOf = function lastIndexOf(sought /*, fromIndex */) {\r\n            var self = splitString && _toString(this) == \"[object String]\" ?\r\n                    this.split(\"\") :\r\n                    toObject(this),\r\n                length = self.length >>> 0;\r\n\r\n            if (!length) {\r\n                return -1;\r\n            }\r\n            var i = length - 1;\r\n            if (arguments.length > 1) {\r\n                i = Math.min(i, toInteger(arguments[1]));\r\n            }\r\n            // handle negative indices\r\n            i = i >= 0 ? i : length - Math.abs(i);\r\n            for (; i >= 0; i--) {\r\n                if (i in self && sought === self[i]) {\r\n                    return i;\r\n                }\r\n            }\r\n            return -1;\r\n        };\r\n    }\r\n\r\n    //\r\n    // Object\r\n    // ======\r\n    //\r\n\r\n    // ES5 15.2.3.14\r\n    // http://es5.github.com/#x15.2.3.14\r\n    if (!Object.keys) {\r\n        // http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\r\n        var hasDontEnumBug = true,\r\n            hasProtoEnumBug = (function () { }).propertyIsEnumerable('prototype'),\r\n            dontEnums = [\r\n                \"toString\",\r\n                \"toLocaleString\",\r\n                \"valueOf\",\r\n                \"hasOwnProperty\",\r\n                \"isPrototypeOf\",\r\n                \"propertyIsEnumerable\",\r\n                \"constructor\"\r\n            ],\r\n            dontEnumsLength = dontEnums.length;\r\n\r\n        for (var key in { \"toString\": null }) {\r\n            hasDontEnumBug = false;\r\n        }\r\n\r\n        Object.keys = function keys(object) {\r\n            var isFunction = _toString(object) === '[object Function]',\r\n                isObject = object !== null && typeof object === 'object';\r\n\r\n            if (!isObject && !isFunction) {\r\n                throw new TypeError(\"Object.keys called on a non-object\");\r\n            }\r\n\r\n            var keys = [],\r\n                skipProto = hasProtoEnumBug && isFunction;\r\n            for (var name in object) {\r\n                if (!(skipProto && name === 'prototype') && owns(object, name)) {\r\n                    keys.push(name);\r\n                }\r\n            }\r\n\r\n            if (hasDontEnumBug) {\r\n                var ctor = object.constructor,\r\n                    skipConstructor = ctor && ctor.prototype === object;\r\n                for (var i = 0; i < dontEnumsLength; i++) {\r\n                    var dontEnum = dontEnums[i];\r\n                    if (!(skipConstructor && dontEnum === 'constructor') && owns(object, dontEnum)) {\r\n                        keys.push(dontEnum);\r\n                    }\r\n                }\r\n            }\r\n            return keys;\r\n        };\r\n\r\n    }\r\n\r\n    //\r\n    // Date\r\n    // ====\r\n    //\r\n\r\n    // ES5 15.9.5.43\r\n    // http://es5.github.com/#x15.9.5.43\r\n    // This function returns a String value represent the instance in time\r\n    // represented by this Date object. The format of the String is the Date Time\r\n    // string format defined in 15.9.1.15. All fields are present in the String.\r\n    // The time zone is always UTC, denoted by the suffix Z. If the time value of\r\n    // this object is not a finite Number a RangeError exception is thrown.\r\n    var negativeDate = -62198755200000,\r\n        negativeYearString = \"-000001\";\r\n    if (\r\n        !Date.prototype.toISOString ||\r\n        (new Date(negativeDate).toISOString().indexOf(negativeYearString) === -1)\r\n    ) {\r\n        Date.prototype.toISOString = function toISOString() {\r\n            var result, length, value, year, month;\r\n            if (!isFinite(this)) {\r\n                throw new RangeError(\"Date.prototype.toISOString called on non-finite value.\");\r\n            }\r\n\r\n            year = this.getUTCFullYear();\r\n\r\n            month = this.getUTCMonth();\r\n            // see https://github.com/es-shims/es5-shim/issues/111\r\n            year += Math.floor(month / 12);\r\n            month = (month % 12 + 12) % 12;\r\n\r\n            // the date time string format is specified in 15.9.1.15.\r\n            result = [month + 1, this.getUTCDate(),\r\n                this.getUTCHours(), this.getUTCMinutes(), this.getUTCSeconds()];\r\n            year = (\r\n                (year < 0 ? \"-\" : (year > 9999 ? \"+\" : \"\")) +\r\n                (\"00000\" + Math.abs(year))\r\n                .slice(0 <= year && year <= 9999 ? -4 : -6)\r\n            );\r\n\r\n            length = result.length;\r\n            while (length--) {\r\n                value = result[length];\r\n                // pad months, days, hours, minutes, and seconds to have two\r\n                // digits.\r\n                if (value < 10) {\r\n                    result[length] = \"0\" + value;\r\n                }\r\n            }\r\n            // pad milliseconds to have three digits.\r\n            return (\r\n                year + \"-\" + result.slice(0, 2).join(\"-\") +\r\n                \"T\" + result.slice(2).join(\":\") + \".\" +\r\n                (\"000\" + this.getUTCMilliseconds()).slice(-3) + \"Z\"\r\n            );\r\n        };\r\n    }\r\n\r\n\r\n    // ES5 15.9.5.44\r\n    // http://es5.github.com/#x15.9.5.44\r\n    // This function provides a String representation of a Date object for use by\r\n    // JSON.stringify (15.12.3).\r\n    var dateToJSONIsSupported = false;\r\n    try {\r\n        dateToJSONIsSupported = (\r\n            Date.prototype.toJSON &&\r\n            new Date(NaN).toJSON() === null &&\r\n            new Date(negativeDate).toJSON().indexOf(negativeYearString) !== -1 &&\r\n            Date.prototype.toJSON.call({ // generic\r\n                toISOString: function () {\r\n                    return true;\r\n                }\r\n            })\r\n        );\r\n    } catch (e) {\r\n    }\r\n    if (!dateToJSONIsSupported) {\r\n        Date.prototype.toJSON = function toJSON(key) {\r\n            // When the toJSON method is called with argument key, the following\r\n            // steps are taken:\r\n\r\n            // 1.  Let O be the result of calling ToObject, giving it the this\r\n            // value as its argument.\r\n            // 2. Let tv be toPrimitive(O, hint Number).\r\n            var o = Object(this),\r\n                tv = toPrimitive(o),\r\n                toISO;\r\n            // 3. If tv is a Number and is not finite, return null.\r\n            if (typeof tv === \"number\" && !isFinite(tv)) {\r\n                return null;\r\n            }\r\n            // 4. Let toISO be the result of calling the [[Get]] internal method of\r\n            // O with argument \"toISOString\".\r\n            toISO = o.toISOString;\r\n            // 5. If IsCallable(toISO) is false, throw a TypeError exception.\r\n            if (typeof toISO != \"function\") {\r\n                throw new TypeError(\"toISOString property is not callable\");\r\n            }\r\n            // 6. Return the result of calling the [[Call]] internal method of\r\n            //  toISO with O as the this value and an empty argument list.\r\n            return toISO.call(o);\r\n\r\n            // NOTE 1 The argument is ignored.\r\n\r\n            // NOTE 2 The toJSON function is intentionally generic; it does not\r\n            // require that its this value be a Date object. Therefore, it can be\r\n            // transferred to other kinds of objects for use as a method. However,\r\n            // it does require that any such object have a toISOString method. An\r\n            // object is free to use the argument key to filter its\r\n            // stringification.\r\n        };\r\n    }\r\n\r\n    // ES5 15.9.4.2\r\n    // http://es5.github.com/#x15.9.4.2\r\n    // based on work shared by Daniel Friesen (dantman)\r\n    // http://gist.github.com/303249\r\n    if (!Date.parse || isNaN(Date.parse(\"2000-01-01T00:00:00.000Z\"))) {\r\n        // XXX global assignment won't work in embeddings that use\r\n        // an alternate object for the context.\r\n        Date = (function (NativeDate) {\r\n\r\n            // Date.length === 7\r\n            function Date(Y, M, D, h, m, s, ms) {\r\n                var length = arguments.length;\r\n                if (this instanceof NativeDate) {\r\n                    var date = length == 1 && String(Y) === Y ? // isString(Y)\r\n                        // We explicitly pass it through parse:\r\n                        new NativeDate(Date.parse(Y)) :\r\n                        // We have to manually make calls depending on argument\r\n                        // length here\r\n                        length >= 7 ? new NativeDate(Y, M, D, h, m, s, ms) :\r\n                        length >= 6 ? new NativeDate(Y, M, D, h, m, s) :\r\n                        length >= 5 ? new NativeDate(Y, M, D, h, m) :\r\n                        length >= 4 ? new NativeDate(Y, M, D, h) :\r\n                        length >= 3 ? new NativeDate(Y, M, D) :\r\n                        length >= 2 ? new NativeDate(Y, M) :\r\n                        length >= 1 ? new NativeDate(Y) :\r\n                                      new NativeDate();\r\n                    // Prevent mixups with unfixed Date object\r\n                    date.constructor = Date;\r\n                    return date;\r\n                }\r\n                return NativeDate.apply(this, arguments);\r\n            };\r\n\r\n            // 15.9.1.15 Date Time String Format.\r\n            var isoDateExpression = new RegExp(\"^\" +\r\n                \"(\\\\d{4}|[\\+\\-]\\\\d{6})\" + // four-digit year capture or sign +\r\n                                          // 6-digit extended year\r\n                \"(?:-(\\\\d{2})\" + // optional month capture\r\n                \"(?:-(\\\\d{2})\" + // optional day capture\r\n                \"(?:\" + // capture hours:minutes:seconds.milliseconds\r\n                    \"T(\\\\d{2})\" + // hours capture\r\n                    \":(\\\\d{2})\" + // minutes capture\r\n                    \"(?:\" + // optional :seconds.milliseconds\r\n                        \":(\\\\d{2})\" + // seconds capture\r\n                        \"(?:(\\\\.\\\\d{1,}))?\" + // milliseconds capture\r\n                    \")?\" +\r\n                \"(\" + // capture UTC offset component\r\n                    \"Z|\" + // UTC capture\r\n                    \"(?:\" + // offset specifier +/-hours:minutes\r\n                        \"([-+])\" + // sign capture\r\n                        \"(\\\\d{2})\" + // hours offset capture\r\n                        \":(\\\\d{2})\" + // minutes offset capture\r\n                    \")\" +\r\n                \")?)?)?)?\" +\r\n            \"$\");\r\n\r\n            var months = [\r\n                0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365\r\n            ];\r\n\r\n            function dayFromMonth(year, month) {\r\n                var t = month > 1 ? 1 : 0;\r\n                return (\r\n                    months[month] +\r\n                    Math.floor((year - 1969 + t) / 4) -\r\n                    Math.floor((year - 1901 + t) / 100) +\r\n                    Math.floor((year - 1601 + t) / 400) +\r\n                    365 * (year - 1970)\r\n                );\r\n            }\r\n\r\n            function toUTC(t) {\r\n                return Number(new NativeDate(1970, 0, 1, 0, 0, 0, t));\r\n            }\r\n\r\n            // Copy any custom methods a 3rd party library may have added\r\n            for (var key in NativeDate) {\r\n                Date[key] = NativeDate[key];\r\n            }\r\n\r\n            // Copy \"native\" methods explicitly; they may be non-enumerable\r\n            Date.now = NativeDate.now;\r\n            Date.UTC = NativeDate.UTC;\r\n            Date.prototype = NativeDate.prototype;\r\n            Date.prototype.constructor = Date;\r\n\r\n            // Upgrade Date.parse to handle simplified ISO 8601 strings\r\n            Date.parse = function parse(string) {\r\n                var match = isoDateExpression.exec(string);\r\n                if (match) {\r\n                    // parse months, days, hours, minutes, seconds, and milliseconds\r\n                    // provide default values if necessary\r\n                    // parse the UTC offset component\r\n                    var year = Number(match[1]),\r\n                        month = Number(match[2] || 1) - 1,\r\n                        day = Number(match[3] || 1) - 1,\r\n                        hour = Number(match[4] || 0),\r\n                        minute = Number(match[5] || 0),\r\n                        second = Number(match[6] || 0),\r\n                        millisecond = Math.floor(Number(match[7] || 0) * 1000),\r\n                        // When time zone is missed, local offset should be used\r\n                        // (ES 5.1 bug)\r\n                        // see https://bugs.ecmascript.org/show_bug.cgi?id=112\r\n                        isLocalTime = Boolean(match[4] && !match[8]),\r\n                        signOffset = match[9] === \"-\" ? 1 : -1,\r\n                        hourOffset = Number(match[10] || 0),\r\n                        minuteOffset = Number(match[11] || 0),\r\n                        result;\r\n                    if (\r\n                        hour < (\r\n                            minute > 0 || second > 0 || millisecond > 0 ?\r\n                            24 : 25\r\n                        ) &&\r\n                        minute < 60 && second < 60 && millisecond < 1000 &&\r\n                        month > -1 && month < 12 && hourOffset < 24 &&\r\n                        minuteOffset < 60 && // detect invalid offsets\r\n                        day > -1 &&\r\n                        day < (\r\n                            dayFromMonth(year, month + 1) -\r\n                            dayFromMonth(year, month)\r\n                        )\r\n                    ) {\r\n                        result = (\r\n                            (dayFromMonth(year, month) + day) * 24 +\r\n                            hour +\r\n                            hourOffset * signOffset\r\n                        ) * 60;\r\n                        result = (\r\n                            (result + minute + minuteOffset * signOffset) * 60 +\r\n                            second\r\n                        ) * 1000 + millisecond;\r\n                        if (isLocalTime) {\r\n                            result = toUTC(result);\r\n                        }\r\n                        if (-8.64e15 <= result && result <= 8.64e15) {\r\n                            return result;\r\n                        }\r\n                    }\r\n                    return NaN;\r\n                }\r\n                return NativeDate.parse.apply(this, arguments);\r\n            };\r\n\r\n            return Date;\r\n        })(Date);\r\n    }\r\n\r\n    // ES5 15.9.4.4\r\n    // http://es5.github.com/#x15.9.4.4\r\n    if (!Date.now) {\r\n        Date.now = function now() {\r\n            return new Date().getTime();\r\n        };\r\n    }\r\n\r\n\r\n    //\r\n    // Number\r\n    // ======\r\n    //\r\n\r\n    // ES5.1 15.7.4.5\r\n    // http://es5.github.com/#x15.7.4.5\r\n    if (!Number.prototype.toFixed || (0.00008).toFixed(3) !== '0.000' || (0.9).toFixed(0) === '0' || (1.255).toFixed(2) !== '1.25' || (1000000000000000128).toFixed(0) !== \"1000000000000000128\") {\r\n        // Hide these variables and functions\r\n        (function () {\r\n            var base, size, data, i;\r\n\r\n            base = 1e7;\r\n            size = 6;\r\n            data = [0, 0, 0, 0, 0, 0];\r\n\r\n            function multiply(n, c) {\r\n                var i = -1;\r\n                while (++i < size) {\r\n                    c += n * data[i];\r\n                    data[i] = c % base;\r\n                    c = Math.floor(c / base);\r\n                }\r\n            }\r\n\r\n            function divide(n) {\r\n                var i = size, c = 0;\r\n                while (--i >= 0) {\r\n                    c += data[i];\r\n                    data[i] = Math.floor(c / n);\r\n                    c = (c % n) * base;\r\n                }\r\n            }\r\n\r\n            function toString() {\r\n                var i = size;\r\n                var s = '';\r\n                while (--i >= 0) {\r\n                    if (s !== '' || i === 0 || data[i] !== 0) {\r\n                        var t = String(data[i]);\r\n                        if (s === '') {\r\n                            s = t;\r\n                        } else {\r\n                            s += '0000000'.slice(0, 7 - t.length) + t;\r\n                        }\r\n                    }\r\n                }\r\n                return s;\r\n            }\r\n\r\n            function pow(x, n, acc) {\r\n                return (n === 0 ? acc : (n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc)));\r\n            }\r\n\r\n            function log(x) {\r\n                var n = 0;\r\n                while (x >= 4096) {\r\n                    n += 12;\r\n                    x /= 4096;\r\n                }\r\n                while (x >= 2) {\r\n                    n += 1;\r\n                    x /= 2;\r\n                }\r\n                return n;\r\n            }\r\n\r\n            Number.prototype.toFixed = function (fractionDigits) {\r\n                var f, x, s, m, e, z, j, k;\r\n\r\n                // Test for NaN and round fractionDigits down\r\n                f = Number(fractionDigits);\r\n                f = f !== f ? 0 : Math.floor(f);\r\n\r\n                if (f < 0 || f > 20) {\r\n                    throw new RangeError(\"Number.toFixed called with invalid number of decimals\");\r\n                }\r\n\r\n                x = Number(this);\r\n\r\n                // Test for NaN\r\n                if (x !== x) {\r\n                    return \"NaN\";\r\n                }\r\n\r\n                // If it is too big or small, return the string value of the number\r\n                if (x <= -1e21 || x >= 1e21) {\r\n                    return String(x);\r\n                }\r\n\r\n                s = \"\";\r\n\r\n                if (x < 0) {\r\n                    s = \"-\";\r\n                    x = -x;\r\n                }\r\n\r\n                m = \"0\";\r\n\r\n                if (x > 1e-21) {\r\n                    // 1e-21 < x < 1e21\r\n                    // -70 < log2(x) < 70\r\n                    e = log(x * pow(2, 69, 1)) - 69;\r\n                    z = (e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1));\r\n                    z *= 0x10000000000000; // Math.pow(2, 52);\r\n                    e = 52 - e;\r\n\r\n                    // -18 < e < 122\r\n                    // x = z / 2 ^ e\r\n                    if (e > 0) {\r\n                        multiply(0, z);\r\n                        j = f;\r\n\r\n                        while (j >= 7) {\r\n                            multiply(1e7, 0);\r\n                            j -= 7;\r\n                        }\r\n\r\n                        multiply(pow(10, j, 1), 0);\r\n                        j = e - 1;\r\n\r\n                        while (j >= 23) {\r\n                            divide(1 << 23);\r\n                            j -= 23;\r\n                        }\r\n\r\n                        divide(1 << j);\r\n                        multiply(1, 1);\r\n                        divide(2);\r\n                        m = toString();\r\n                    } else {\r\n                        multiply(0, z);\r\n                        multiply(1 << (-e), 0);\r\n                        m = toString() + '0.00000000000000000000'.slice(2, 2 + f);\r\n                    }\r\n                }\r\n\r\n                if (f > 0) {\r\n                    k = m.length;\r\n\r\n                    if (k <= f) {\r\n                        m = s + '0.0000000000000000000'.slice(0, f - k + 2) + m;\r\n                    } else {\r\n                        m = s + m.slice(0, k - f) + '.' + m.slice(k - f);\r\n                    }\r\n                } else {\r\n                    m = s + m;\r\n                }\r\n\r\n                return m;\r\n            }\r\n        }());\r\n    }\r\n\r\n\r\n    //\r\n    // String\r\n    // ======\r\n    //\r\n\r\n\r\n    // ES5 15.5.4.14\r\n    // http://es5.github.com/#x15.5.4.14\r\n\r\n    // [bugfix, IE lt 9, firefox 4, Konqueror, Opera, obscure browsers]\r\n    // Many browsers do not split properly with regular expressions or they\r\n    // do not perform the split correctly under obscure conditions.\r\n    // See http://blog.stevenlevithan.com/archives/cross-browser-split\r\n    // I've tested in many browsers and this seems to cover the deviant ones:\r\n    //    'ab'.split(/(?:ab)*/) should be [\"\", \"\"], not [\"\"]\r\n    //    '.'.split(/(.?)(.?)/) should be [\"\", \".\", \"\", \"\"], not [\"\", \"\"]\r\n    //    'tesst'.split(/(s)*/) should be [\"t\", undefined, \"e\", \"s\", \"t\"], not\r\n    //       [undefined, \"t\", undefined, \"e\", ...]\r\n    //    ''.split(/.?/) should be [], not [\"\"]\r\n    //    '.'.split(/()()/) should be [\".\"], not [\"\", \"\", \".\"]\r\n\r\n    var string_split = String.prototype.split;\r\n    if (\r\n        'ab'.split(/(?:ab)*/).length !== 2 ||\r\n        '.'.split(/(.?)(.?)/).length !== 4 ||\r\n        'tesst'.split(/(s)*/)[1] === \"t\" ||\r\n        ''.split(/.?/).length ||\r\n        '.'.split(/()()/).length > 1\r\n    ) {\r\n        (function () {\r\n            var compliantExecNpcg = /()??/.exec(\"\")[1] === void 0; // NPCG: nonparticipating capturing group\r\n\r\n            String.prototype.split = function (separator, limit) {\r\n                var string = this;\r\n                if (separator === void 0 && limit === 0)\r\n                    return [];\r\n\r\n                // If `separator` is not a regex, use native split\r\n                if (Object.prototype.toString.call(separator) !== \"[object RegExp]\") {\r\n                    return string_split.apply(this, arguments);\r\n                }\r\n\r\n                var output = [],\r\n                    flags = (separator.ignoreCase ? \"i\" : \"\") +\r\n                            (separator.multiline ? \"m\" : \"\") +\r\n                            (separator.extended ? \"x\" : \"\") + // Proposed for ES6\r\n                            (separator.sticky ? \"y\" : \"\"), // Firefox 3+\r\n                    lastLastIndex = 0,\r\n                    // Make `global` and avoid `lastIndex` issues by working with a copy\r\n                    separator = new RegExp(separator.source, flags + \"g\"),\r\n                    separator2, match, lastIndex, lastLength;\r\n                string += \"\"; // Type-convert\r\n                if (!compliantExecNpcg) {\r\n                    // Doesn't need flags gy, but they don't hurt\r\n                    separator2 = new RegExp(\"^\" + separator.source + \"$(?!\\\\s)\", flags);\r\n                }\r\n                /* Values for `limit`, per the spec:\r\n                 * If undefined: 4294967295 // Math.pow(2, 32) - 1\r\n                 * If 0, Infinity, or NaN: 0\r\n                 * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;\r\n                 * If negative number: 4294967296 - Math.floor(Math.abs(limit))\r\n                 * If other: Type-convert, then use the above rules\r\n                 */\r\n                limit = limit === void 0 ?\r\n                    -1 >>> 0 : // Math.pow(2, 32) - 1\r\n                    limit >>> 0; // ToUint32(limit)\r\n                while (match = separator.exec(string)) {\r\n                    // `separator.lastIndex` is not reliable cross-browser\r\n                    lastIndex = match.index + match[0].length;\r\n                    if (lastIndex > lastLastIndex) {\r\n                        output.push(string.slice(lastLastIndex, match.index));\r\n                        // Fix browsers whose `exec` methods don't consistently return `undefined` for\r\n                        // nonparticipating capturing groups\r\n                        if (!compliantExecNpcg && match.length > 1) {\r\n                            match[0].replace(separator2, function () {\r\n                                for (var i = 1; i < arguments.length - 2; i++) {\r\n                                    if (arguments[i] === void 0) {\r\n                                        match[i] = void 0;\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                        if (match.length > 1 && match.index < string.length) {\r\n                            Array.prototype.push.apply(output, match.slice(1));\r\n                        }\r\n                        lastLength = match[0].length;\r\n                        lastLastIndex = lastIndex;\r\n                        if (output.length >= limit) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (separator.lastIndex === match.index) {\r\n                        separator.lastIndex++; // Avoid an infinite loop\r\n                    }\r\n                }\r\n                if (lastLastIndex === string.length) {\r\n                    if (lastLength || !separator.test(\"\")) {\r\n                        output.push(\"\");\r\n                    }\r\n                } else {\r\n                    output.push(string.slice(lastLastIndex));\r\n                }\r\n                return output.length > limit ? output.slice(0, limit) : output;\r\n            };\r\n        }());\r\n\r\n        // [bugfix, chrome]\r\n        // If separator is undefined, then the result array contains just one String,\r\n        // which is the this value (converted to a String). If limit is not undefined,\r\n        // then the output array is truncated so that it contains no more than limit\r\n        // elements.\r\n        // \"0\".split(undefined, 0) -> []\r\n    } else if (\"0\".split(void 0, 0).length) {\r\n        String.prototype.split = function (separator, limit) {\r\n            if (separator === void 0 && limit === 0) return [];\r\n            return string_split.apply(this, arguments);\r\n        }\r\n    }\r\n\r\n\r\n    // ECMA-262, 3rd B.2.3\r\n    // Note an ECMAScript standart, although ECMAScript 3rd Edition has a\r\n    // non-normative section suggesting uniform semantics and it should be\r\n    // normalized across all browsers\r\n    // [bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE\r\n    if (\"\".substr && \"0b\".substr(-1) !== \"b\") {\r\n        var string_substr = String.prototype.substr;\r\n        /**\r\n         *  Get the substring of a string\r\n         *  @param  {integer}  start   where to start the substring\r\n         *  @param  {integer}  length  how many characters to return\r\n         *  @return {string}\r\n         */\r\n        String.prototype.substr = function (start, length) {\r\n            return string_substr.call(\r\n                this,\r\n                start < 0 ? ((start = this.length + start) < 0 ? 0 : start) : start,\r\n                length\r\n            );\r\n        }\r\n    }\r\n\r\n    // ES5 15.5.4.20\r\n    // whitespace from: http://es5.github.io/#x15.5.4.20\r\n    var ws = \"\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\" +\r\n        \"\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\" +\r\n        \"\\u2029\\uFEFF\";\r\n    if (!String.prototype.trim || ws.trim()) {\r\n        // http://blog.stevenlevithan.com/archives/faster-trim-javascript\r\n        // http://perfectionkills.com/whitespace-deviations/\r\n        ws = \"[\" + ws + \"]\";\r\n        var trimBeginRegexp = new RegExp(\"^\" + ws + ws + \"*\"),\r\n            trimEndRegexp = new RegExp(ws + ws + \"*$\");\r\n        String.prototype.trim = function trim() {\r\n            if (this === void 0 || this === null) {\r\n                throw new TypeError(\"can't convert \" + this + \" to object\");\r\n            }\r\n            return String(this)\r\n                .replace(trimBeginRegexp, \"\")\r\n                .replace(trimEndRegexp, \"\");\r\n        };\r\n    }\r\n\r\n    // ES-5 15.1.2.2\r\n    if (parseInt(ws + '08') !== 8 || parseInt(ws + '0x16') !== 22) {\r\n        parseInt = (function (origParseInt) {\r\n            var hexRegex = /^0[xX]/;\r\n            return function parseIntES5(str, radix) {\r\n                str = String(str).trim();\r\n                if (!+radix) {\r\n                    radix = hexRegex.test(str) ? 16 : 10;\r\n                }\r\n                return origParseInt(str, radix);\r\n            };\r\n        }(parseInt));\r\n    }\r\n\r\n    //\r\n    // Util\r\n    // ======\r\n    //\r\n\r\n    // ES5 9.4\r\n    // http://es5.github.com/#x9.4\r\n    // http://jsperf.com/to-integer\r\n\r\n    function toInteger(n) {\r\n        n = +n;\r\n        if (n !== n) { // isNaN\r\n            n = 0;\r\n        } else if (n !== 0 && n !== (1 / 0) && n !== -(1 / 0)) {\r\n            n = (n > 0 || -1) * Math.floor(Math.abs(n));\r\n        }\r\n        return n;\r\n    }\r\n\r\n    function isPrimitive(input) {\r\n        var type = typeof input;\r\n        return (\r\n            input === null ||\r\n            type === \"undefined\" ||\r\n            type === \"boolean\" ||\r\n            type === \"number\" ||\r\n            type === \"string\"\r\n        );\r\n    }\r\n\r\n    function toPrimitive(input) {\r\n        var val, valueOf, toString;\r\n        if (isPrimitive(input)) {\r\n            return input;\r\n        }\r\n        valueOf = input.valueOf;\r\n        if (typeof valueOf === \"function\") {\r\n            val = valueOf.call(input);\r\n            if (isPrimitive(val)) {\r\n                return val;\r\n            }\r\n        }\r\n        toString = input.toString;\r\n        if (typeof toString === \"function\") {\r\n            val = toString.call(input);\r\n            if (isPrimitive(val)) {\r\n                return val;\r\n            }\r\n        }\r\n        throw new TypeError();\r\n    }\r\n\r\n    // ES5 9.9\r\n    // http://es5.github.com/#x9.9\r\n    var toObject = function (o) {\r\n        if (o == null) { // this matches both null and undefined\r\n            throw new TypeError(\"can't convert \" + o + \" to object\");\r\n        }\r\n        return Object(o);\r\n    };\r\n\r\n}));})();\n//@ sourceURL=setup/shims/es5-shim");