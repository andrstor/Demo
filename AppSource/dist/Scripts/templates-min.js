minispade.register("pages/application",function(){Ember.TEMPLATES.application=Ember.Handlebars.template(function(e,a,r,t,s){this.compilerInfo=[4,">= 1.0.0"],r=this.merge(r,Ember.Handlebars.helpers),s=s||{};var i,n="";return s.buffer.push('<div id="ember-page">\r\n    '),i=r._triageMustache.call(a,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[a],types:["ID"],data:s}),(i||0===i)&&s.buffer.push(i),s.buffer.push("\r\n</div>"),n})});
minispade.register("pages/layout",function(){Ember.TEMPLATES["application/layout"]=Ember.Handlebars.template(function(e,a,t,s,r){this.compilerInfo=[4,">= 1.0.0"],t=this.merge(t,Ember.Handlebars.helpers),r=r||{};var n,h="";return n=t._triageMustache.call(a,"yield",{hash:{},hashTypes:{},hashContexts:{},contexts:[a],types:["ID"],data:r}),(n||0===n)&&r.buffer.push(n),r.buffer.push("  \r\n"),h})});
minispade.register("pages/index/index",function(){Ember.TEMPLATES.index=Ember.Handlebars.template(function(e,n,i,r,s){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,Ember.Handlebars.helpers),s=s||{},s.buffer.push("Index template")})});
minispade.register("pages/loading/loading",function(){Ember.TEMPLATES.loading=Ember.Handlebars.template(function(e,i,n,r,a){this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,Ember.Handlebars.helpers),a=a||{},a.buffer.push("LOADING....")})});
minispade.register("plugins/controls/datepicker/datepicker",function(){Ember.TEMPLATES.datepicker=Ember.Handlebars.template(function(e,n,a,s,t){function i(e,n){n.buffer.push('\r\n    <div class="input-append date datepicker inline-block">\r\n        <input type="text" class="date-pad"/>\r\n        <span class="add-on"><i class="icon-calendar"></i></span>\r\n    </div>\r\n')}this.compilerInfo=[4,">= 1.0.0"],a=this.merge(a,Ember.Handlebars.helpers),t=t||{};var r,p=this;r=a["with"].call(n,"view",{hash:{},hashTypes:{},hashContexts:{},inverse:p.noop,fn:p.program(1,i,t),contexts:[n],types:["ID"],data:t}),t.buffer.push(r||0===r?r:"")})});
minispade.register("plugins/controls/fileuploader/fileuploader",function(){Ember.TEMPLATES.fileuploader=Ember.Handlebars.template(function(s,e,r,t,n){function a(s,e){var t,n,a,i="";return e.buffer.push("\r\n"),t=r._triageMustache.call(s,"warnings",{hash:{},hashTypes:{},hashContexts:{},contexts:[s],types:["ID"],data:e}),(t||0===t)&&e.buffer.push(t),e.buffer.push('\r\n\r\n<!--<input id="file2" type="file" name="files[]" data-url="api/file/" multiple>-->\r\n'),t=r._triageMustache.call(s,"fileref",{hash:{},hashTypes:{},hashContexts:{},contexts:[s],types:["ID"],data:e}),(t||0===t)&&e.buffer.push(t),e.buffer.push('\r\n\r\n<td colspan="2" '),e.buffer.push(o((n=r.bindAttr||s&&s.bindAttr,a={hash:{"class":"haveFile:hide"},hashTypes:{"class":"STRING"},hashContexts:{"class":s},contexts:[],types:[],data:e},n?n.call(s,a):f.call(s,"bindAttr",a)))),e.buffer.push('>\r\n    <div class="fileInputDrop">\r\n        <div class="fileInput">\r\n            <a href="#" class="btn">Last opp fil</a>\r\n            <span class="fileName"></span>\r\n            <input class="pointer" id="fileupload" type="file" name="files[]" data-url="https://api-atbiutv.nbsstdlab.no/file/" multiple>\r\n            <!--<input class="pointer" type="file" id="File1">-->\r\n        </div>\r\n        <i class="info init">eller <strong>dra og slipp</strong> filen her</i>\r\n        <i class="info drag"><strong>Slipp filen her</strong></i>\r\n    </div>\r\n</td>\r\n<td colspan="2" '),e.buffer.push(o((n=r.bindAttr||s&&s.bindAttr,a={hash:{"class":"haveFile::hide"},hashTypes:{"class":"STRING"},hashContexts:{"class":s},contexts:[],types:[],data:e},n?n.call(s,a):f.call(s,"bindAttr",a)))),e.buffer.push('>\r\n    <div class="data-table">\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th colspan="1">Uploaded document</th>\r\n                    <th colspan="1"></th>\r\n                </tr>\r\n                <tr class="shadow"><th colspan="2"></th></tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td style="width:30%;">\r\n                        <div class="file pdf">\r\n                            <a >'),t=r._triageMustache.call(s,"file.lazydocumenttype.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[s],types:["ID"],data:e}),(t||0===t)&&e.buffer.push(t),e.buffer.push('</a>\r\n                            \r\n                            <div class="progress">\r\n                                <div class="bar" ></div>\r\n                            </div>\r\n                            <div class="details">\r\n                                Saving: \r\n                            </div>\r\n                            \r\n                            '),t=r.unless.call(s,"isUploading",{hash:{},hashTypes:{},hashContexts:{},inverse:u.noop,fn:u.program(2,l,e),contexts:[s],types:["ID"],data:e}),(t||0===t)&&e.buffer.push(t),e.buffer.push('\r\n                        </div>\r\n                    </td>\r\n                    <td style="width: 5%;" class="actions">\r\n                        <a  class="delete">delete</a>\r\n                    </td>    \r\n                </tr>\r\n                                       \r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</td>\r\n'),i}function l(s,e){var r="";return e.buffer.push('\r\n                            <div class="details">\r\n                                Last updated \r\n                            </div>\r\n                            <div class="details">\r\n                                Name:  \r\n                            </div>\r\n                            '),r}this.compilerInfo=[4,">= 1.0.0"],r=this.merge(r,Ember.Handlebars.helpers),n=n||{};var i,h,p,d="",f=r.helperMissing,o=this.escapeExpression,u=this;return n.buffer.push("\r\n\r\n"),i=r["with"].call(e,"view",{hash:{},hashTypes:{},hashContexts:{},inverse:u.noop,fn:u.program(1,a,n),contexts:[e],types:["ID"],data:n}),(i||0===i)&&n.buffer.push(i),n.buffer.push("\r\n"),n.buffer.push(o((h=r.Errorbox||e&&e.Errorbox,p={hash:{content:"view.warnings"},hashTypes:{content:"ID"},hashContexts:{content:e},contexts:[],types:[],data:n},h?h.call(e,p):f.call(e,"Errorbox",p)))),n.buffer.push("\r\n"),d})});